{
	"info": {
		"_postman_id": "4865070-9bacf172-fea7-41a0-89fa-334763194b83",
		"name": "GoRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "List users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63324c36-76ff-4894-a9b3-c0c4bda79624",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"//validate \r",
									"pm.test(\"Validate attributes are not null\", function () {    \r",
									"        var jsonDataArray;\r",
									"        for ( var i=0; i < jsonData.length; i++  ){\r",
									"                jsonDataArray = jsonData[i];\r",
									"                for( var j = 0; j<jsonDataArray.length; j++ ) {\r",
									"                    jsonDataArray[i].id.to.not.be(null);\r",
									"                    jsonDataArray[i].name.to.not.be(null);\r",
									"                    jsonDataArray[i].email.to.not.be(null);\r",
									"                    jsonDataArray[i].gender.to.not.be(null);\r",
									"                    jsonDataArray[i].status.to.not.be(null);\r",
									"                }\r",
									"        }  \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4865070-a40d0ec1-393f-4bd9-88ff-337ee623e036",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer ACCESS-TOKEN"
							}
						],
						"url": {
							"raw": "{{urlGorest}}/users",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "access-token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "text",
									"disabled": true
								}
							]
						},
						"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XGET \"https://gorest.co.in/public/v2/users\""
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bcf327e-ead2-4e97-9cf6-042bd1a46493",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"//validate \r",
									"pm.test(\"Validate attributes are not null\", function () {            \r",
									"        pm.expect(jsonData.id).to.not.be.null;\r",
									"        pm.expect(jsonData.name).to.not.be.null;\r",
									"        let id = jsonData.id;\r",
									"        pm.collectionVariables.set(\"createdUserId\", id);                \r",
									"});\r",
									"\r",
									"//validate name and email are the same from body\r",
									"pm.test(\"Validate name and email from response are the same sent in body \", function () {    \r",
									"        pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"name\"));\r",
									"        pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));                    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b18b0667-f43e-406e-b8eb-a61b18f0d647",
								"exec": [
									"var name = pm.variables.replaceIn('{{$randomFirstName}} {{$randomLastName}}');\r",
									"var email = name.replace(' ','');\r",
									"pm.collectionVariables.set(\"name\", name);\r",
									"pm.collectionVariables.set(\"email\", name.replace(' ','')+\"@gmail.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4865070-ae97f1ce-b2cf-4a5a-a748-9c0df2294ba1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"{{email}}\",\r\n    \"status\": \"active\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlGorest}}/users",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40\" -XPOST \"https://gorest.co.in/public/v2/users\" -d '{\"name\":\"Tenali Ramakrishna\", \"gender\":\"male\", \"email\":\"tenali.ramakrishna@15ce.com\", \"status\":\"active\"}'"
					},
					"response": []
				},
				{
					"name": "Create user blank data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bcf327e-ead2-4e97-9cf6-042bd1a46493",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"//validate \r",
									"pm.test(\"Validate attributes are not null\", function () {            \r",
									"        pm.expect(jsonData.id).to.not.be.null;\r",
									"        pm.expect(jsonData.name).to.not.be.null;\r",
									"        let id = jsonData.id;\r",
									"        pm.collectionVariables.set(\"createdUserId\", id);                \r",
									"});\r",
									"\r",
									"//validate name and email are the same from body\r",
									"pm.test(\"Validate name and email from response are the same sent in body \", function () {    \r",
									"        pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"name\"));\r",
									"        pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));                    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b18b0667-f43e-406e-b8eb-a61b18f0d647",
								"exec": [
									"var name = pm.variables.replaceIn('{{$randomFirstName}} {{$randomLastName}}');\r",
									"var email = name.replace(' ','');\r",
									"pm.collectionVariables.set(\"name\", name);\r",
									"pm.collectionVariables.set(\"email\", name.replace(' ','')+\"@gmail.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4865070-4042bc26-0b7a-4e23-aaf9-a4d67a4e925d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"gender\": \"\",\r\n    \"email\": \"\",\r\n    \"status\": \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlGorest}}/users",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40\" -XPOST \"https://gorest.co.in/public/v2/users\" -d '{\"name\":\"Tenali Ramakrishna\", \"gender\":\"male\", \"email\":\"tenali.ramakrishna@15ce.com\", \"status\":\"active\"}'"
					},
					"response": []
				},
				{
					"name": "Update user",
					"id": "4865070-e02ddc53-1800-4be2-ae51-a7becc04fba3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"active\",\r\n    \"gender\" : \"female\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlGorest}}/users/{{createdUserId}}",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"users",
								"{{createdUserId}}"
							]
						},
						"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40\" -XPATCH \"https://gorest.co.in/public/v2/users/7439935\" -d '{\"name\":\"Allasani Peddana\", \"email\":\"allasani.peddana@15ce.com\", \"status\":\"active\"}'"
					},
					"response": []
				},
				{
					"name": "Update user blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4951fd52-c7c8-4e00-bf21-5679014facfe",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"\r",
									"//validate \r",
									"pm.test(\"Validate message to be specific error\", function () {    \r",
									"        var jsonDataArray;\r",
									"        for ( var i=0; i < jsonData.length; i++  ){\r",
									"                jsonDataArray = jsonData[i];\r",
									"                for( var j = 0; j<jsonDataArray.length; j++ ) {\r",
									"                    jsonDataArray[i].message.to.eql(\"can´t be blank\");\r",
									"                }\r",
									"        }  \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4865070-ef15448e-1079-4522-89f8-e5c1b8a38f3e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"email\": \"\",\r\n    \"status\": \"\",\r\n    \"gender\" : \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{urlGorest}}/users//{{createdUserId}}",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"users",
								"",
								"{{createdUserId}}"
							]
						},
						"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40\" -XPATCH \"https://gorest.co.in/public/v2/users/7439935\" -d '{\"name\":\"Allasani Peddana\", \"email\":\"allasani.peddana@15ce.com\", \"status\":\"active\"}'"
					},
					"response": []
				},
				{
					"name": "Delete",
					"id": "4865070-12319619-a27f-482d-83a0-acb0b60f96ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40"
							}
						],
						"url": {
							"raw": "{{urlGorest}}/users//{{createdUserId}}",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"users",
								"",
								"{{createdUserId}}"
							]
						},
						"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer bc867755c2e9b01710104d6d60131b249f12ee2b5b847e1673a43d74a521fa40\" -XDELETE \"https://gorest.co.in/public/v2/users/7439935\""
					},
					"response": []
				}
			],
			"id": "4865070-0e2c8d1f-ef17-408f-a1f2-329e9da4d1df"
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "215c58ac-db6d-47a6-9ccc-511e01648cde",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"var schema = {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Welcome1Element\"},\"definitions\":{\"Welcome1Element\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"integer\"},\"user_id\":{\"type\":\"integer\"},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"}},\"required\":[\"body\",\"id\",\"title\",\"user_id\"],\"title\":\"Welcome1Element\"}}}\r",
									"\r",
									"pm.variables.set(\"schema\", schema);\r",
									"try {\r",
									"    var schema = pm.variables.get(\"schema\");\r",
									"  \r",
									"    if(schema) {\r",
									"        const jsonData = pm.response.json();\r",
									"        if(jsonData) {\r",
									"            var Ajv = require('ajv');\r",
									"            ajv = new Ajv({ logger: console, allErrors: true });\r",
									"  \r",
									"            pm.test('Schema is valid', function() {\r",
									"                var result = tv4.validateMultiple(jsonData, schema);\r",
									"                console.log(result);\r",
									"                pm.expect(result.valid).to.be.true;\r",
									"            });\r",
									"       }\r",
									"    }\r",
									"}\r",
									"catch(e) {\r",
									"    console.log(e);\r",
									"}\r",
									"\r",
									"\r",
									"//validate \r",
									"pm.test(\"Validate attributes are not null\", function () {    \r",
									"        var jsonDataArray;\r",
									"        for ( var i=0; i < jsonData.length; i++  ){\r",
									"                jsonDataArray = jsonData[i];\r",
									"                for( var j = 0; j<jsonDataArray.length; j++ ) {\r",
									"                    jsonDataArray[i].id.to.not.be(null);\r",
									"                    jsonDataArray[i].user_id.to.not.be(null);\r",
									"                    jsonDataArray[i].title.to.not.be(null);\r",
									"                    jsonDataArray[i].body.to.not.be(null);\r",
									"                }\r",
									"        }  \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4865070-78c2edf9-fcd5-48c2-894b-9645723917de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{urlGorest}}/posts",
							"host": [
								"{{urlGorest}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			],
			"id": "4865070-db394dd1-9eba-421b-98dd-2cf0212986d0"
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5960385-7fa0-49b4-9fc8-eb32902c66bd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"//validate \r",
									"pm.test(\"Validate attributes are not null\", function () {    \r",
									"        var jsonDataArray;\r",
									"        for ( var i=0; i < jsonData.length; i++  ){\r",
									"                jsonDataArray = jsonData[i];\r",
									"                for( var j = 0; j<jsonDataArray.length; j++ ) {\r",
									"                    jsonDataArray[i].id.to.not.be(null);                    \r",
									"                    jsonDataArray[i].post_id.to.not.be(null);                    \r",
									"                }\r",
									"        }  \r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4865070-443f2533-41de-45d1-ae92-160d056267a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/comments",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"comments"
							]
						}
					},
					"response": []
				}
			],
			"id": "4865070-ecd1813d-1b34-4306-bd37-5ab4efbfdeb4"
		},
		{
			"name": "Get todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "395a4b33-d590-4450-8aaa-c784e384dc7f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "4865070-16e5e68c-83d0-4c6f-8ac5-847584d55857",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{urlGorest}}/todos",
					"host": [
						"{{urlGorest}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c1b1dc06-1204-4fe8-a3b3-3600b85d7308",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e0c779fd-1cba-4d5c-8c60-242c07f3482c",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "createdUserId",
			"value": "0",
			"type": "string"
		}
	]
}